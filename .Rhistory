library(maps)
library(magrittr)
library(viridis)
library(denguedatahub)
library(visdat)
# Level of Dengue risk around the world
level_of_risk
# Visualize level_of_risk dataset
vis_dat(level_of_risk)
# Summarize and Visualize level_of_riskdata
tab1 <- level_of_risk %>% group_by(region, level_of_risk) %>%
summarise(count = n(), .groups = 'drop')
knitr::kable(tab1)
ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
# Presence of dengue incidence in 2019
worlddata2019 <- dplyr::filter(world_annual, year == 2019)
ggplot(worlddata2019, aes(x = long,
y = lat,
group=group,
fill = dengue.present)) +
geom_polygon(color = "black") +
labs(title = "Presence of dengue incidence in 2019",
subtitle = "Dengue Incidence in 2019: A Global Health Challenge",
x = "Longitude",
y = "Latitude",
caption = "by Jubayer Hossain, Data Source: denguedatahub") +
guides(fill = guide_legend(title = "Dengue Present?"))+
theme(legend.position = "top") +
scale_fill_brewer(palette = "Dark2")
# Global Dengue Incidence
world_annual |>
group_by(year) |>
summarise(Total)
world_annual |>
group_by(year) |>
summarise(Total)
# Global dengue incidence
world_dengue <- world_annual
world_dengue |>
group_by(year)
world_dengue |>
filter(year %in% 2018:2019) |>
plot_ly(data = world_dengue, x = ~year, y = ~incidence)
world_dengue |>
filter(year %in% 2018:2019) |>
plot_ly(data = world_dengue, x = ~year, y = ~incidence, type = "bar")
world_dengue |>
filter(year %in% 2018:2019) |>
plot_ly(data = world_dengue, x = ~year)
world_dengue |>
filter(year %in% 2018:2019) |>
plot_ly(data = world_dengue, x = ~year)  |>
add_bars(y = ~incidence, name = 'Confirmed Cases') |>
add_trace(y = ~incidence, type = 'scatter', mode = 'lines+markers', name = "Trends") |>
layout(title = "Monthly Dengue Cases",
xaxis = list(title = 'Month'),
yaxis = list(title = 'Number of Confirmed Cases'),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= -0.3))
unique(world_dengue$year)
# load packages
library(tidyverse)
library(tmap)
library(bangladesh)
country <- get_map("country")
bd_plot("country")
# Install and load necessary packages
install.packages("forecast")
library(tidyverse)
library(forecast)
# transform data
long_cases_data <- dengue_cases |>
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") |>
mutate(Months = factor(Months, levels = month.name))
# cases data
data <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 1)\
# data
data <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 1)\
# data
data <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 1)
View(data)
# data
dengue_data <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 1)
# Transpose the data so that months are rows and years are columns
dengue_data <- t(dengue_data)
View(dengue_data)
# Convert row names (months) to a time series
dengue_ts <- ts(dengue_data[, -1], start = c(2012, 1), end = c(2023, 12), frequency = 12)
View(dengue_ts)
# Fit the SARIMA model
sarima_model <- auto.arima(dengue_ts, seasonal = TRUE, stepwise = TRUE, approximation = FALSE)
# Manually specify SARIMA order
sarima_model <- arima(dengue_ts, order=c(1, 1, 1), seasonal=c(1, 1, 1, 12))
library(tidyverse)
library(forecast)
# Read the data
dengue_data <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 1)
# Transpose the data so that months are rows and years are columns
dengue_data <- t(dengue_data)
# Convert row names (months) to a time series
dengue_ts <- ts(dengue_data[, -1], start = c(2012, 1), end = c(2023, 12), frequency = 12)
# Fit the SARIMA model
sarima_model <- auto.arima(dengue_ts, seasonal = TRUE, stepwise = TRUE, approximation = FALSE)
sarima_model <- auto.arima(dengue_ts, seasonal = TRUE,
stepwise = TRUE,
approximation = FALSE,
max.order=10)
# Fit the SARIMA model
sarima_model <- auto.arima(dengue_ts, seasonal = TRUE,
stepwise = TRUE,
approximation = TRUE,
max.order=10)
sarima_model <- auto.arima(dengue_ts, seasonal = TRUE,
stepwise = TRUE,
approximation = TRUE,
max.order=10)
library(tidyverse)
library(easystats)
library(plotly)
library(raster)
library(geodata)
# data
data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
data <- data |> mutate(Month = factor(Month, levels = month.name))
climate_data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
climate_data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
# data
climate_data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
climate_data <- climate_data |> mutate(Month = factor(Month, levels = month.name))
View(climate_data)
plot_dengue_cases <- plot_ly(climate_data, x = ~Month, y = ~DengueCases, type = "scatter", mode = "lines+markers") %>%
layout(title = "Dengue Cases Over Time",
xaxis = list(title = "Month"),
yaxis = list(title = "Dengue Cases"))
plot_dengue_cases
plot_dengue_cases
plot_rainfall <- plot_ly(data, x = ~Month, y = ~Rainfall, type = "bar", marker = list(color = "skyblue")) %>%
layout(title = "Monthly Rainfall",
xaxis = list(title = "Month"),
yaxis = list(title = "Rainfall (mm)"))
# Bar Plot of Monthly Rainfall
plot_rainfall <- plot_ly(climate_data, x = ~Month, y = ~Rainfall, type = "bar", marker = list(color = "skyblue")) %>%
layout(title = "Monthly Rainfall",
xaxis = list(title = "Month"),
yaxis = list(title = "Rainfall (mm)"))
plot_rainfall
# Bar Plot of Monthly Rainfall
plot_rainfall <- plot_ly(climate_data, x = ~Month, y = ~Rainfall, type = "bar", marker = list(color = "skyblue")) %>%
add_bars(y = ~DengueCases) |>
layout(title = "Monthly Rainfall",
xaxis = list(title = "Month"),
yaxis = list(title = "Rainfall (mm)"))
plot_rainfall
# Bar Plot of Monthly Rainfall
plot_rainfall <- plot_ly(climate_data, x = ~Month, y = ~Rainfall, type = "bar", marker = list(color = "skyblue")) %>%
add_trace(y = ~DengueCases) |>
layout(title = "Monthly Rainfall",
xaxis = list(title = "Month"),
yaxis = list(title = "Rainfall (mm)"))
plot_rainfall
plot_ly(data, x = ~TMAX, y = ~DengueCases, mode = "lines+markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "lines+markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
plot_ly(climate_data, x = ~TMAX, y = ~DengueCases, mode = "lines+markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "lines+markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = climate_data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = climate_data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = climate_data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
climate_data |>
group_by(Month)
climate_data |>
group_by(Month) |>
plot_ly(data = climate_data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
climate_data |>
group_by(Month)
group <- climate_data |>
group_by(Month)
plot_ly(data = group, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = climate_data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = climate_data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
ggplot(climate_data, aes(x = Month))
ggplot(climate_data, aes(x = Month)) +
geom_line(aes(y = TMIN))
ggplot(climate_data, aes(x = Month)) +
geom_line(aes(y = TMIN, color = "Min. Temperature (C)"))
ggplot(climate_data, aes(x = Month))+
geom_line(aes(y = TMIN, color = "Min. Temperature (C)"))+
geom_line(aes(y = TMAX, color = "Max. Temperature (C)"))+
geom_line(aes(y = DengueCases, color = "Dengue Cases"))+
labs(title = "Dengue cases trend over time",
x = "Date",
y = "Count")+
scale_color_manual("Dengue Cases",
values = c("Min. Temperature (C)" = "red",
"Max. Temperature (C)" = "black",
"Dengue Cases" = "green"))
# Five years comparison
five_years <- all_years |>
filter(Year %in% c(2018, 2019, 2020, 2021, 2022, 2023)) |>
group_by(Year) |>
summarise(TotalCases = sum(Cases),
TotalDeaths = sum(Deaths))
library(outbreaks)
?outbreaks
library(tidyverse)
library(shiny)
library(ggplot2)
# data
data <- readxl::read_excel(here::here("data/DengueCases2023.xlsx"), sheet = 1)
View(data)
# data
dengue_data <- readxl::read_excel(here::here("data/DengueCases2023.xlsx"), sheet = 1)
# Convert Date column to a date object
dengue_data$Date <- as.Date(dengue_data$Date, format = "%m/%d/%Y")
# Fill missing values with zeros
dengue_data[is.na(dengue_data)] <- 0
library(scales)
# Create a time series plot for Dengue cases, deaths, and recoveries
ggplot(dengue_data, aes(x = Date)) +
geom_line(aes(y = Cases, color = "Cases"), size = 1) +
geom_line(aes(y = Deaths, color = "Deaths"), size = 1) +
geom_line(aes(y = Recovered, color = "Recovered"), size = 1) +
scale_color_manual(values = c("Cases" = "blue", "Deaths" = "red", "Recovered" = "green")) +
labs(title = "Dengue Cases, Deaths, and Recoveries Over Time",
y = "Count",
x = "Date") +
theme_minimal()
runApp('scripts')
runApp('scripts')
library(rio)
# data
dengue_data <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
runApp('scripts')
runApp('scripts')
runApp('scripts')
library(shiny)
library(shinydashboard)
library(dplyr)
library(ggplot2)
library(rio)
# data
dengue_data <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
# Convert Date column to a date object
dengue_data$Date <- as.Date(dengue_data$Date, format = "%m/%d/%Y")
# Fill missing values with zeros
dengue_data[is.na(dengue_data)] <- 0
runApp('scripts/app2.R')
library(shinydashboard)
install.packages("shinydashboard")
runApp('scripts/app2.R')
runApp('scripts/app2.R')
runApp('scripts/app2.R')
runApp('scripts/app2.R')
runApp('scripts/app2.R')
library(shiny); runApp('scripts/app2.R')
# data
dengue_data <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
# Convert Date column to a date object
dengue_data$Date <- as.Date(dengue_data$Date, format = "%m/%d/%Y")
# Fill missing values with zeros
dengue_data[is.na(dengue_data)] <- 0
# Predict Dengue cases using a simple time series model
dengue_ts <- ts(dengue_data$Cases, frequency = 7)
dengue_model <- auto.arima(dengue_ts)
dengue_forecast <- forecast(dengue_model, h = 7)
ggplot(dengue_data, aes(x = Date, y = Cases)) +
geom_line() +
geom_line(data = dengue_forecast$mean, aes(y = .), color = "blue", linetype = "dashed") +
labs(title = "Dengue Cases Over Time",
x = "Date",
y = "Cases") +
theme_minimal()
library(tidyverse)
ggplot(dengue_data, aes(x = Date, y = Cases)) +
geom_line() +
geom_line(data = dengue_forecast$mean, aes(y = .), color = "blue", linetype = "dashed") +
labs(title = "Dengue Cases Over Time",
x = "Date",
y = "Cases") +
theme_minimal()
runApp('scripts/app2.R')
library(shiny)
library(shiny)
library(tidyverse)
library(rio)
library(shiny)
library(tidyverse)
library(forecast)
# data
dengue_data <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
# Convert Date column to a date object
dengue_data$Date <- as.Date(dengue_data$Date, format = "%m/%d/%Y")
# Fill missing values with zeros
dengue_data[is.na(dengue_data)] <- 0
# Predict Dengue cases using a simple time series model
dengue_ts <- ts(dengue_data$Cases, frequency = 7)
dengue_model <- auto.arima(dengue_ts)
dengue_forecast <- forecast(dengue_model, h = 7)
dengue_forecast
# Replace negative forecasts with zeros
dengue_forecast$mean <- pmax(dengue_forecast$mean, 0)
dengue_forecast
View(dengue_forecast)
# Replace negative forecasts with zeros
dengue_forecast$mean <- pmax(dengue_forecast$mean, 0)
dengue_forecast
dengue_forecast
View(dengue_forecast)
runApp('scripts/app2.R')
runApp('scripts/app2.R')
runApp('scripts/app2.R')
runApp('scripts/app2.R')
runApp('scripts/app2.R')
# data
dengue_data <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
# Convert Date column to a date object
dengue_data$Date <- as.Date(dengue_data$Date, format = "%m/%d/%Y")
# Fill missing values with zeros
dengue_data[is.na(dengue_data)] <- 0
runApp('scripts/app2.R')
library(tidyverse)
library(easystats)
library(plotly)
library(raster)
library(geodata)
# data
climate_data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
climate_data <- climate_data |> mutate(Month = factor(Month, levels = month.name))
ggplot(climate_data, aes(x = Month)) +
geom_line(aes(y = TMIN, color = "Min. Temperature (C)"))
dir()
aus_temp <- stack("tmean_australia_wc.nc")  # Loading gridded #data as RasterStack
library(tidyverse)
library(easystats)
library(plotly)
library(ncdf4)
library(raster)
library(geodata)
library(ncdf4)
library(raster)
library(geodata)
dir()
aus_temp <- stack("tmean_australia_wc.nc")  # Loading gridded #data as RasterStack
worldclim_country("Bangladesh", var = "tmin")
worldclim_country("Bangladesh", var = "tmin",  path=tempdir())
tmin <- worldclim_country("Bangladesh", var = "tmin",  path=tempdir())
plot(tmin)
spplot(tmin/10) # lattice plot, returns a trellice
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun",
"Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
names(tmin) <- months #set the layer names to months
plot(tmin)
spplot(tmin)
install.packages("googlesheets4")
library(googlesheets4)
# Packages
library(tidyverse)
library(plotly)
library(readxl)
library(googlesheets4)
library(rio)
df <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing")
View(df)
df <- read_sheet("1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing")
df <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing")
?read_sheet
df <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing",
range = "Cases")
View(df)
df <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing",
range = "Deaths")
View(df)
# cases data
dengue_cases <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing",
range = "Cases")
dengue_cases <- dengue_cases |> mutate(Months = factor(Months, levels = month.name))
# deaths data
dengue_deaths <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing",
range = "Deaths")
dengue_deaths <- dengue_deaths |> mutate(Months = factor(Months, levels = month.name))
# cases data
dengue_cases <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing",
range = "Cases")
dengue_cases <- dengue_cases |> mutate(Months = factor(Months, levels = month.name))
View(dengue_cases)
# deaths data
dengue_deaths <- read_sheet("https://docs.google.com/spreadsheets/d/1tqaroRwF40Q6jlaI_aFxAPAgj0yLhFXfua2gzdaZ270/edit?usp=sharing",
range = "Deaths")
dengue_deaths <- dengue_deaths |> mutate(Months = factor(Months, levels = month.name))
daily_data_23 <- read_sheet("https://docs.google.com/spreadsheets/d/1QgYLR4FW0f9MxiH0GDZm2_5tZOdAlLZAKT4-8Tz9rwQ/edit?usp=sharing",
1:9)
daily_data_23 <- read_sheet("https://docs.google.com/spreadsheets/d/1QgYLR4FW0f9MxiH0GDZm2_5tZOdAlLZAKT4-8Tz9rwQ/edit?usp=sharing",
range = 1:9)
daily_data_23 <- read_sheet("https://docs.google.com/spreadsheets/d/1QgYLR4FW0f9MxiH0GDZm2_5tZOdAlLZAKT4-8Tz9rwQ/edit?usp=sharing",
range = January:September)
# daily data for 2023
daily_data_23 <- sheets_sheets()("https://docs.google.com/spreadsheets/d/1QgYLR4FW0f9MxiH0GDZm2_5tZOdAlLZAKT4-8Tz9rwQ/edit?usp=sharing")
# daily data for 2023
daily_data_23 <- sheets_sheets("https://docs.google.com/spreadsheets/d/1QgYLR4FW0f9MxiH0GDZm2_5tZOdAlLZAKT4-8Tz9rwQ/edit?usp=sharing")
# daily data for 2023
sheet_links <- "https://docs.google.com/spreadsheets/d/1QgYLR4FW0f9MxiH0GDZm2_5tZOdAlLZAKT4-8Tz9rwQ/edit?usp=sharing"
sheet_links |>
sheet_names()
sheet_links |>
sheet_names() |>
set_names()
sheet_links |>
sheet_names() |>
set_names() |>
map_df(read_sheet, ss = sheet_links, .id = "Cut")
library(tidyverse)
library(raster)
library(geodata)
file <- rast(here::here("climate_data/precp.tif"))
plot(file)
plot(file, breaks = c(0, 1000, 4000, 6000), col = terrain.colors(4))
plot(file, breaks = c(40, 60, 80), col = terrain.colors(4))
plot(file)
spplot(file)
plot(file, main = "XX")
plot(file, main = "XX", breaks = "quantile")
plot(file, main = "XX", breaks = "quantile")
plot(file, main = "XX", xlab = "XX")
plot(file, main = "XX")
spplot(file)
library(RColorBrewer)
pal <- brewer.pal(7, "OrRd")
plot(file, main = "XX", pal = pal)
file <- rast(here::here("climate_data/precp.tif"))
file <- rast(here::here("climate_data/precp.tif"))
plot(file)
file
mean(file)
file <- raster(here::here("climate_data/precp.tif"))
plot(file, at = seq(min_val, max_val, length.out = 11))
min_val <- 4.943266
max_val <- 17.502493
file <- raster(here::here("climate_data/precp.tif"))
mean(file)
plot(file, at = seq(min_val, max_val, length.out = 11))
file
file <- raster(here::here("climate_data/precp.tif"))
file
summary(file)
