vis_dat(level_of_risk)
# Summarize and Visualize level_of_riskdata
tab1 <- level_of_risk %>% group_by(region, level_of_risk) %>%
summarise(count = n(), .groups = 'drop')
knitr::kable(tab1)
p <- ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
# Presence of dengue incidence in 2019
worlddata2019 <- dplyr::filter(world_annual, year == 2019)
ggplot(worlddata2019, aes(x = long,
y = lat,
group=group,
fill = dengue.present)) +
geom_polygon(color = "black") +
labs(title = "Presence of dengue incidence in 2019",
subtitle = "Dengue Incidence in 2019: A Global Health Challenge",
x = "Longitude",
y = "Latitude",
caption = "by Jubayer Hossain, Data Source: denguedatahub") +
guides(fill = guide_legend(title = "Dengue Present?"))+
theme(legend.position = "top") +
scale_fill_brewer(palette = "Dark2")
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(maps)
library(magrittr)
library(viridis)
library(denguedatahub)
library(visdat)
# Level of Dengue risk around the world
level_of_risk
# Visualize level_of_risk dataset
vis_dat(level_of_risk)
# Summarize and Visualize level_of_riskdata
tab1 <- level_of_risk %>% group_by(region, level_of_risk) %>%
summarise(count = n(), .groups = 'drop')
knitr::kable(tab1)
p <- ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
?denguedatahub
# Viz 1: Daily Confirmed, Death, and Recovered Cases Over Time in 2023
plot_ly(data = daily_data_23, x = ~Date, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~Cases)
# Packages
library(tidyverse)
library(plotly)
library(readxl)
library(rio)
# cases data
dengue_cases <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 1)
dengue_cases <- dengue_cases |> mutate(Months = factor(Months, levels = month.name))
# deaths data
dengue_deaths <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 2)
dengue_deaths <- dengue_deaths |> mutate(Months = factor(Months, levels = month.name))
# daily data for 2023
daily_data_23 <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
# convert into date format
daily_data_23$Date <- as.Date(daily_data_23$Date)
# impute missing values with zero
daily_data_23[is.na(daily_data_23)] <- 0
# transform data into long format for visualizations
# cases
long_cases_data <- dengue_cases |>
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") |>
mutate(Months = factor(Months, levels = month.name))
# deaths
long_deaths_data <- dengue_deaths |>
pivot_longer(cols = 2:10, names_to = "Year", values_to = "Deaths") |>
mutate(Months = factor(Months, levels = month.name))
# join data
all_years <- left_join(long_cases_data, long_deaths_data,
by = c("Months", "Year"))
all_years$Year <- as.factor(all_years$Year)
# Monthly dengue cases for 2023
long_cases_data_23 <- long_cases_data|>
filter(Year == 2023)
long_deaths_data_23 <- long_deaths_data|>
filter(Year == 2023)
# join data for monthly cases
data23 <- left_join(long_cases_data_23, long_deaths_data_23,
by = c("Months", "Year"))
data23$Year <- as.factor(data23$Year)
# Viz 1: Daily Confirmed, Death, and Recovered Cases Over Time in 2023
plot_ly(data = daily_data_23, x = ~Date, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~Cases)
View(daily_data_23)
daily_data_23 |>
mutate(Month = lubridate::month(date),
Day = lubridate::day(date))
daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date))
View(daily_data_23)
daily_data_23 <- daily_data_23 |>
mutate(Month = factor(lubridate::month(Date), levels = month.name),
Day = lubridate::day(Date))
View(daily_data_23)
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date))
View(all_years)
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date)) |>
mutate(Month = factor(Month, levels = month.name))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date))
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date)) |>
mutate(Month = factor(Month, levels = month.name))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
# Viz 1: Daily Confirmed, Death, and Recovered Cases Over Time in 2023
monthly_data_23 <- daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase)
monthly_data_23 <- daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalCase = sum(Deaths),
TotalCase = sum(Recovered))
View(monthly_data_23)
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalCase = sum(Deaths),
TotalCase = sum(Recovered))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalDeaths = sum(Deaths),
TotalRecovered = sum(Recovered))
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers')
monthly_data_23 <- daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalDeaths = sum(Deaths),
TotalRecovered = sum(Recovered))
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers')
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TotalRecovered, name = "Recovered", type = 'scatter', mode = 'lines+markers')
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TotalRecovered, name = "Recovered", type = 'scatter', mode = 'lines+markers') |>
layout(title = "Monthly Dengue Reporting Cases, Deaths, and Recovered in 2023",
xaxis = list(title = 'Date'),
yaxis = list(title = 'Cases'),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
world_annual
world <- world_annual
View(world)
plot_ly(data = world_annual, x = ~year)  |>
add_bars(y = ~incidence, name = 'Dengue Incidence', marker = list(color = "#ff7c43")) |>
layout(title = 'Global Dengue Incidence from ',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Incidence'))
plot_ly(data = world_annual, x = ~year)  |>
add_bars(y = ~incidence, name = 'Dengue Incidence', marker = list(color = "#ff7c43")) |>
layout(title = 'Global Dengue Incidence from ',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Incidence'))
install.packages("bangladesh")
library(bangladesh)
library(bangladesh)
bd_plot("country")
bd_plot("division")
bd_plot("district")
install.packages("tmap")
install.packages("tmap")
library(tmap)
population <- bangladesh::pop_district_2011[, c("district", "population")]
district <- get_map("district")
map_data <- dplyr::left_join(district, population, by = c("District" = "district"))
map <- tm_shape(map_data) +
tm_polygons("population",id = "District",palette = "Reds", title = "Population") +
tm_style("cobalt")+
tm_layout(
"Bangladesh District Wise Population Map\nSource: BBS",
title.position = c("left", "bottom"),
legend.position = c("right", "top")
)
tmap::tmap_mode("plot")
map
library(ggplot2)
ggplot(data = map_data) +
geom_sf(aes(fill = population))+
theme_void()+
viridis::scale_fill_viridis(trans = "log", name="Population", labels = scales::unit_format(unit = "M", scale = 1e-6)) +
labs(
title = "Bangladesh Population Map",
subtitle = "Population & Housing Census 2011",
caption = "Data Source: BBS"
)
library(ggplot2)
ggplot(data = map_data) +
geom_sf(aes(fill = population))+
theme_void()+
viridis::scale_fill_viridis(trans = "log", name="Population", labels = scales::unit_format(unit = "M", scale = 1e-6)) +
labs(
title = "Bangladesh Population Map",
subtitle = "Population & Housing Census 2011",
caption = "Data Source: BBS"
)
ggplot(data = division_map) +
geom_sf() +
geom_sf_label(aes(label = Division)) +
geom_point(data = division_centroids, x = division_centroids$lon, y = division_centroids$lat, col = "red", size = 3) +
xlab("")+ ylab("")+
theme_minimal()
division_map <- get_map("division")
division_centroids <- bangladesh::get_coordinates(level = "division")
knitr::kable(division_centroids, format = "html")
division_centroids <- bangladesh::get_coordinates(level = "division")
ggplot(data = division_map) +
geom_sf() +
geom_sf_label(aes(label = Division)) +
geom_point(data = division_centroids, x = division_centroids$lon, y = division_centroids$lat, col = "red", size = 3) +
xlab("")+ ylab("")+
theme_minimal()
?bangladesh
library(bangladesh)
country <- get_map("country")
library(bangladesh)
country <- get_map("country")
View(country)
country <- get_coordinates(level = "country")
country <- get_coordinates(level = "division")
View(country)
sylhet <- get_divisions(divisions = "Sylhet",level =  "upazila")
View(sylhet)
# single division
ggplot(data = sylhet) +
geom_sf() +
xlab("")+ ylab("")+
theme_minimal()
library(tmap)
# load packages
library(tidyverse)
library(tmap)
library(bangladesh)
library(tidyverse)
# Max Temp
max_temp <- read.csv(here::here("data/Maximum_Temperature[2012-2022.csv"))
# Max Temp
max_temp <- read.csv(here::here("data/Maximum_Temperature[2012-2022.csv"))
View(max_temp)
install.packages(" worldclim")
install.packages("raster")
install.packages("raster")
library(raster)
# Global adm boundaries
austria0 <- getData('GADM', country='AUT', level=0)
install.packages("geodata")
?geodata
# Get Data
austria0 <- getData('GADM' , country="AUT", level=0)
austria1 <- getData('GADM' , country="AUT", level=1)
bd <- getData('GADM' , country="BD", level=0)
plot(bd)
library(geodata)
world_bank_pop
worldclim_global()
?worldclim_global()
bd <- worldclim_country("Bangladesh", var="tmin", path=tempdir())
bd
plot(bd)
View(bd)
data <- read.csv(here::here("data/Maximum_Temperature[2012-2022.csv"))
View(data)
data <- read.csv(here::here("data/Maximum_Temperature[2012-2022.csv"), sep = ",")
View(data)
# data
data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx))
# data
data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
View(data)
library(plotly)
plot_ly(data = data, x = ~Month)
data <- data |> mutate(Month = factor(Months, levels = month.name))
data <- data |> mutate(Month = factor(Month, levels = month.name))
plot_ly(data = data, x = ~Month)
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN)
plot_ly(data = data, x = ~Month, type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMIN)
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers')
View(data)
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMAX, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
p1 <- plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
p2 <- plot_ly(data = data, x = ~Month) |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
p1 <- plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
p1 <- plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
ggplot(data, aes(x = Month))
ggplot(data, aes(x = Month)) |>
geom_line(aes(y = TMIN))
ggplot(data, aes(x = Month))+
geom_line(aes(y = TMIN))
ggplot(data, aes(x = Month))
ggplot(data, aes(x = Month))+
geom_line(aes(y = TMIN))
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers')
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
data <- data |> mutate(Month = factor(Month, levels = month.name))
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~DengueCases, name = "Dengue Cases",  type = 'scatter', mode = 'lines+markers')
library(report)
library(easystats)
correlation(data, -Month)
correlation(data)
results <- correlation(data)
results %>%
summary(redundant = TRUE) %>%
plot()
plot(cor_test(data, "TMIN", "DengueCases"))
plot_ly(data = data, x = ~Month) |>
add_trace(y = ~TMIN, name = "Min. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TMAX, name = "Max. Temperature (C)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Rainfall, name = "Rainfall (mm)",  type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~Humidity, name = "Humidity (%)",  type = 'scatter', mode = 'lines+markers') |>
# Line Plot of Dengue Cases Over Time
plot_dengue_cases <- plot_ly(data, x = ~Month, y = ~DengueCases, type = "scatter", mode = "lines+markers") %>%
layout(title = "Dengue Cases Over Time",
xaxis = list(title = "Month"),
yaxis = list(title = "Dengue Cases"))
library(tidyverse)
library(easystats)
library(plotly)
library(raster)
library(geodata)
# data
data <- readxl::read_excel(here::here("data/Climate_Variables_Dengue.xlsx"))
data <- data |> mutate(Month = factor(Month, levels = month.name))
# Line Plot of Dengue Cases Over Time
plot_dengue_cases <- plot_ly(data, x = ~Month, y = ~DengueCases, type = "scatter", mode = "lines+markers") %>%
layout(title = "Dengue Cases Over Time",
xaxis = list(title = "Month"),
yaxis = list(title = "Dengue Cases"))
# Bar Plot of Monthly Rainfall
plot_rainfall <- plot_ly(data, x = ~Month, y = ~Rainfall, type = "bar", marker = list(color = "skyblue")) %>%
layout(title = "Monthly Rainfall",
xaxis = list(title = "Month"),
yaxis = list(title = "Rainfall (mm)"))
# Scatter Plot of Dengue Cases vs. Temperature (TMAX and TMIN)
plot_temp_scatter <- plot_ly(data, x = ~TMAX, y = ~DengueCases, mode = "markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
# Box Plot of Dengue Cases by Month
plot_dengue_box <- plot_ly(data, x = ~Month, y = ~DengueCases, type = "box") %>%
layout(title = "Distribution of Dengue Cases by Month",
xaxis = list(title = "Month"),
yaxis = list(title = "Dengue Cases"))
# Combine the plots into a subplot
subplot(plot_dengue_cases, plot_rainfall, plot_temp_scatter, plot_dengue_box, nrows = 2, title = "Dengue and Climate Variables")
plot_dengue_box
plot_temp_scatter
plot_rainfall
plot_dengue_cases
plot_temp_scatter
# Scatter Plot of Dengue Cases vs. Temperature (TMAX and TMIN)
plot_temp_scatter <- plot_ly(data, x = ~TMAX, y = ~DengueCases, mode = "line+markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
# Scatter Plot of Dengue Cases vs. Temperature (TMAX and TMIN)
plot_ly(data, x = ~TMAX, y = ~DengueCases, mode = "line+markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
# Scatter Plot of Dengue Cases vs. Temperature (TMAX and TMIN)
plot_ly(data, x = ~TMAX, y = ~DengueCases, mode = "line+markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "line+markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
plot_ly(data, x = ~TMAX, y = ~DengueCases, mode = "line+markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "line+markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
plot_ly(data, x = ~TMAX, y = ~DengueCases, mode = "lines+markers", type = "scatter", name = "TMAX") %>%
add_trace(x = ~TMIN, y = ~DengueCases, mode = "lines+markers", type = "scatter", name = "TMIN") %>%
layout(title = "Dengue Cases vs. Temperature",
xaxis = list(title = "Temperature (°C)"),
yaxis = list(title = "Dengue Cases"))
