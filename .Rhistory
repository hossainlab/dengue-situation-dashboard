library(RColorBrewer)
# Dates
library(lubridate)
# For displaying tables
library(DT)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases")
View(long_data)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
arrange(Year)
View(long_data)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
arrange(desc(Year))
View(long_data)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
arrange(desc(Year)) %>%
plot_ly(x = ~Year, y = ~Year)
plot_ly(data = long_data, x = ~Year, y = ~Year, type = "bar")
plot_ly(data = as.data.frame(long_data), x = ~Year, y = ~Year, type = "bar")
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
arrange(desc(Year)) %>%
ggbarplot(x = "Year", y = "Cases")
library(ggpubr)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
arrange(desc(Year)) %>%
ggbarplot(x = "Year", y = "Cases")
View(long_data)
long_data
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
arrange(desc(Year))
ggplot(data = long_data, aes(x = Year, y = Cases))+
geom_bar(stat="identity")
fig1 <- ggplot(data = long_data, aes(x = Year, y = Cases))+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Year, y = Cases))+
geom_bar(stat="identity",  fill="steelblue")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = fct_reorder(Year), y = Cases))+
geom_bar(stat="identity",  fill="steelblue")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Year), y = Cases))+
geom_bar(stat="identity",  fill="steelblue")
ggplotly(fig1)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases")
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Month), y = Cases))+
geom_bar(stat="identity",  fill="steelblue")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Months), y = Cases))+
geom_bar(stat="identity",  fill="steelblue")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Months), y = Cases))+
geom_bar(stat="identity",  fill=Year)
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Months), y = Cases))+
geom_bar(stat="identity",  fill="Year")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Months), y = Cases))+
geom_bar(stat="identity")
ggplotly(fig1)
# read data
data <- readxl::read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
## Data cleaning
library(tidyverse)
library(magrittr)
library(purrr)
library(forcats)
## Maps and Plots
library(plotly)
library(ggpubr)
library(leaflet)
library(leafpop)
library(RColorBrewer)
# Dates
library(lubridate)
# For displaying tables
library(DT)
# read data
data <- readxl::read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases")
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Months), y = Cases))+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity")
ggplotly(fig1)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases")
mutate(
Month = factor(Month, levels = month.name)) %>%
arrange(Month)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases")
mutate(
Month = factor(Months, levels = month.name)) %>%
arrange(Months)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases")
mutate(
Month = factor(Months)) %>%
arrange(Months)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases")
mutate(
Months = factor(Months)) %>%
arrange(Months)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months)) %>%
arrange(Months)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity")
ggplotly(fig1)
long_data <- data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name)) %>%
arrange(Months)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases), color = Year)+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity", fill="skyblue", alpha=0.7)
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity", fill="Year", alpha=0.7)
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity", fill=Year, alpha=0.7)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity",fill="forestgreen", alpha=0.5)
ggplotly(fig1)
ggbarplot(long_data, x = "Months", y = "Cases")
ggplotly(p)
p <- ggbarplot(long_data, x = "Months", y = "Cases")
ggplotly(p)
p <- ggbarplot(long_data, x = "Months", y = "Cases", color = "Year")
ggplotly(p)
p <- ggbarplot(long_data, x = "Months", y = "Cases", color = "Year", fill = "steelblue")
ggplotly(p)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_bar(stat="identity",fill="forestgreen", alpha=0.5)
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity",fill="forestgreen", alpha=0.5)
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity",fill="forestgreen", alpha=0.5)
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()
ggplotly(fig1)
library(ggthemes)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_economist()
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme(legend.position="top")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme(legend.position="bottom")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(legend.position="bottom")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(legend.position="top")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(legend.position="top")
fig1
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(legend.position="top")
fig1
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")
fig1
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(legend.position="top")
fig1
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = fct_infreq(Months), y = Cases, fill=Year))+
geom_bar(stat="identity")
ggplotly(fig1)
fig1 <- ggplot(data = long_data, aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")
ggplotly(fig1)
fig2 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_point()
fig2
fig2 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_point()+
geom_smooth(method=lm)
fig2
fig2 <- ggplot(data = long_data, aes(x = Months, y = Cases))+
geom_line()
fig2
fig2 <- ggplot(data = long_data, aes(x = Year, y = Cases))+
geom_line()
fig2
## Data cleaning
library(tidyverse)
library(magrittr)
library(purrr)
library(forcats)
## Maps and Plots
library(plotly)
library(ggthemes)
library(ggpubr)
library(leaflet)
library(leafpop)
library(RColorBrewer)
# Dates
library(lubridate)
# For displaying tables
library(DT)
path <- "DengueCases2023.xlsx"
path %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = path)
path %>%
readxl::excel_sheets() %>%
set_names() %>%
map(read_excel, path = path)
final_dataFrame <- bind_rows("DengueCases2023.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = "DengueCases2023.xlsx"))
library(readxl)
final_dataFrame <- bind_rows("DengueCases2023.xlsx" %>%
excel_sheets() %>%
set_names() %>%
map(read_excel, path = "DengueCases2023.xlsx"))
final_dataFrame <- bind_rows("DengueCases2023.xlsx" %>%
excel_sheets() %>%
purrr::set_names()%>%
map(read_excel, path = "DengueCases2023.xlsx"))
View(final_dataFrame)
# read dengue cases data from 2012 to 2023
all_cases_data <- readxl::read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
# read dengue deaths data from 2012 to 2023
all_deaths_data <- readxl::read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 2)
# read multiple sheets
data23 <- bind_rows("DengueCases2023.xlsx" %>%
excel_sheets() %>%
purrr::set_names()%>%
map(read_excel, path = "DengueCases2023.xlsx"))
# read multiple sheets
data23 <- bind_rows("DengueCases2023.xlsx" %>%
excel_sheets() %>%
purrr::set_names()%>%
map(read_excel, path = "DengueCases2023.xlsx"))
# read multiple sheets
data23 <- bind_rows("DengueCases2023.xlsx" %>%
excel_sheets() %>%
purrr::set_names()%>%
map(read_excel, path = "DengueCases2023.xlsx"))
View(data23)
names(data23)
# for time series plot
df_daily <- data23 %>%
mutate(confirmed_cum = cumsum(`Confirmed Cases`),
death_cum = cumsum(`Confirmed Deaths`))
View(df_daily)
# for time series plot
df_daily <- data23 %>%
group_by(Date)
mutate(confirmed_cum = cumsum(`Confirmed Cases`),
death_cum = cumsum(`Confirmed Deaths`))
# for time series plot
df_daily <- data23 %>%
select(1:3)
group_by(Date) %>%
mutate(confirmed_cum = cumsum(`Confirmed Cases`),
death_cum = cumsum(`Confirmed Deaths`))
fig <- plot_ly(
data = data23,
x = ~ Date,
y = ~ `Confirmed Cases`,
name = "Confirmed Cases",
fillcolor = "blue",
type = "scatter",
mode = "none",
stackgroup = "one") %>%
add_trace(y = ~ `Confirmed Deaths`,
name = "Death",
fillcolor = "red") %>%
layout(
title = "",
yaxis = list(title = "Cumulative Number of Cases"),
xaxis = list(title = "Date",
type = "date"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
fig
fig <- plot_ly(
data = data23,
x = ~ Date,
y = ~ `Confirmed Cases`,
name = "Confirmed Cases",
fillcolor = "blue",
type = "scatter",
mode = "none",
stackgroup = "one") %>%
add_trace(y = ~ `Confirmed Deaths`,
name = "Death",
fillcolor = "red") %>%
layout(
title = "",
yaxis = list(title = "Cumulative Number of Dengue Cases"),
xaxis = list(title = "Date",
type = "Date"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
fig
fig <- plot_ly(
data = data23,
x = ~ Date,
y = ~ `Confirmed Cases`,
name = "Confirmed Cases",
fillcolor = "blue",
type = "line",
mode = "none",
stackgroup = "one") %>%
add_trace(y = ~ `Confirmed Deaths`,
name = "Death",
fillcolor = "red") %>%
layout(
title = "",
yaxis = list(title = "Cumulative Number of Dengue Cases"),
xaxis = list(title = "Date",
type = "Date"),
legend = list(x = 0.1, y = 0.9),
hovermode = "compare"
)
fig
library(flexdashboard)
library(tidyverse)
library(highcharter)
library(gt)
library(htmltools)
library(viridis)
library(echarts4r)
## Data cleaning
library(data.table)
library(dplyr)
library(tidyr)
library(magrittr)
library(purrr)
library(forcats)
library(purrr)
## printing
library(glue)
## Maps and Plots
library(plotly)
library(leaflet)
library(leafpop)
library(RColorBrewer)
# Dates
library(lubridate)
## For displaying tables
library(DT)
library(readxl)
theme_set(theme_classic())
# read multiple sheets
data23 <- bind_rows("DengueCases2023.xlsx" %>%
excel_sheets() %>%
purrr::set_names()%>%
map(read_excel, path = "DengueCases2023.xlsx"))
data23$Date <- as.Date(data23$Date)
# read dengue cases data from 2012 to 2023
all_cases_data <- read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
all_cases_data$Year <- as.factor(all_cases_data$Year)
# read dengue cases data from 2012 to 2023
all_cases_data <- read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
# transform data
long_data <- all_cases_data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name)) %>%
arrange(Months)
ggplot(long_data, aes(x = Months, y = Cases)) +
geom_line(aes(color = Year, linetype = Year)) +
scale_color_manual(values = c("darkred", "steelblue"))
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_line(aes(color = Year, linetype = Year))
ggplotly(fig1)
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_line(aes(color = Year, linetype = Year))+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
long_data
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_line(aes(color = Year))+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_line()+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_point()+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_point(size = 5)+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_point(size = 5)+
geom_line(color = Year)+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_point(size = 5)+
geom_line(color = "Year")+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_point(size = 5)+
geom_line(color = "red")+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
# read dengue cases data from 2012 to 2023
all_cases_data <- read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
# transform data
long_data <- all_cases_data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name))
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_point(size = 5)+
geom_line(color = "red")+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
# read dengue cases data from 2012 to 2023
all_cases_data <- read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
# transform data
long_data <- all_cases_data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name))
head(long_data)
# read dengue cases data from 2012 to 2023
all_cases_data <- read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
# transform data
long_data <- all_cases_data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name))
head(long_data)
# read dengue cases data from 2012 to 2023
all_cases_data <- read_excel("DengueCaseReporting[2012-23].xlsx", sheet = 1)
# transform data
long_data <- all_cases_data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name))
head(long_data)
long_data <- all_cases_data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name))
head(long_data)
```{r}
fig1 <- ggplot(long_data, aes(x = Months, y = Cases)) +
geom_point(size = 5)+
geom_line(color = "red")+
theme_minimal()+
theme(axis.text.x=element_text(angle = 60, hjust = 0))
ggplotly(fig1)
