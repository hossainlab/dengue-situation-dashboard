layout(title = "Year and Month-wise Dengue Cases from 2012 2023",
xaxis = list(title = 'Month'),
yaxis = list(title = 'Number of Confirmed Cases'),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
# Viz 5: Number of Dengue Death Cases by Month [2015-2023]
plot_ly(data = dengue_deaths, x = ~Months)  |>
add_bars(y = ~`2015`, name = '2015') |>
add_bars(y = ~`2016`, name = '2016') |>
add_bars(y = ~`2017`, name = '2017') |>
add_bars(y = ~`2018`, name = '2018') |>
add_bars(y = ~`2019`, name = '2019') |>
add_bars(y = ~`2020`, name = '2020') |>
add_bars(y = ~`2021`, name = '2021') |>
add_bars(y = ~`2022`, name = '2022') |>
add_bars(y = ~`2023`, name = '2023') |>
layout(title = "Year and Month-wise Dengue Death Cases from 2015 to 2023",
xaxis = list(title = 'Month'),
yaxis = list(title = 'Number of Death Cases'),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
# Viz 6: Year-wise Dengue Cases in Bangladesh from 2012 to 2023
year_wise_aggregated <- all_years |>
group_by(Year) |>
summarise(Total_Cases = sum(Cases),
Toal_Deaths = sum(Deaths))
year_wise_aggregated
plot_ly(data = year_wise_aggregated, x = ~Year)  |>
add_bars(y = ~Total_Cases, name = 'Cases', marker = list(color = "#2f4b7c")) |>
layout(title = 'Year-wise Dengue Cases in Bangladesh from 2012 to 2023',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Number of Cases'))
# Viz 6: Year-wise Dengue Cases in Bangladesh from 2015 to 2023
plot_ly(data = year_wise_aggregated, x = ~Year)  |>
add_bars(y = ~Toal_Deaths, name = 'Cases', marker = list(color = "#ff7c43")) |>
layout(title = 'Year-wise Dengue Death Cases in Bangladesh from 2015 to 2023',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Number of Cases'))
plot_ly(data = dengue_deaths, x = ~Months)  |>
add_trace(y = ~`2015`, name = '2015')
plot_ly(data = dengue_deaths, x = ~Months)  |>
add_trace(y = ~`2015`, name = '2015')
# Viz 5: Number of Dengue Death Cases by Month [2015-2023]
plot_ly(data = dengue_deaths, x = ~Months)
plot_ly(data = dengue_deaths, x = ~Months)
# Viz 5: Number of Dengue Death Cases by Month [2015-2023]
plot_ly(data = long_cases_data, x = ~Months)
View(long_cases_data)
# Viz 5: Number of Dengue Death Cases by Month [2015-2023]
plot_ly(data = long_cases_data, x = ~Months, y = ~Cases)
plot_ly(data = long_cases_data, x = ~Months, y = ~Cases)
long_cases_data |>
group_by(Year, Month) |>
summarise(TotalCase = sum(Cases))
long_cases_data |>
group_by(Year, Months) |>
summarise(TotalCase = sum(Cases))
# Viz 5: Number of Dengue Death Cases by Month [2015-2023]
x <- long_cases_data |>
group_by(Year, Months) |>
summarise(TotalCase = sum(Cases))
x
plot_ly(data = x, x = ~Months, y = ~Cases, type = 'scatter', mode = 'lines', color = ~Year)
plot_ly(data = x, x = ~Months, y = ~TotalCase, type = 'scatter', mode = 'lines', color = ~Year)
View(all_years)
x <- all_years |>
group_by(Year, Months) |>
summarise(TotalCase = sum(Cases))
x
plot_ly(data = x, x = ~Months, y = ~TotalCase, type = 'scatter', mode = 'lines', color = ~Year)
plot_ly(data = x, x = ~Months, y = ~TotalCase, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Cases by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Cases"))
plot_ly(data = x, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"))
all_years_aggregated <- all_years |>
group_by(Year, Months) |>
summarise(TotalCase = sum(Cases),
TotalDeaths = sum(Deaths))
plot_ly(data = x, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalCase, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Cases by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Cases"))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalCase, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Cases by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Cases"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1.2))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1.2))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalCase, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Cases by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Cases"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalCase, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Cases by Year",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Cases"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
# Viz 5: Monthly Total Deaths by Year [2015-2023]
plot_ly(data = all_years_aggregated, x = ~Months, y = ~TotalDeaths, type = 'scatter',
mode = 'lines', color = ~Year) |>
layout(title = "Monthly Total Deaths by Year from 2015 to 2023",
xaxis = list(title = "Month"),
yaxis = list(title = "Total Deaths"),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
plot_ly(data = daily_data_23, x = ~Date, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~Cases) %>%
add_trace(y = ~Deaths, name = 'Deaths', line = list(color="black")) %>%
add_trace(y = ~Recovered, name = 'Recovered') %>%
layout(title = "Daily Dengue Reporting Cases in 2023",
xaxis = list(title = 'Date'),
yaxis = list(title = 'Count'),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
plot_ly(data = daily_data_23, x = ~Date, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~Cases) %>%
add_trace(y = ~Deaths, name = 'Deaths', line = list(color="black")) %>%
add_trace(y = ~Recovered, name = 'Recovered') %>%
layout(title = "Daily Dengue Reporting Cases in 2023",
xaxis = list(title = 'Date'),
yaxis = list(title = 'Count'),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(maps)
library(magrittr)
library(viridis)
library(denguedatahub)
library(visdat)
theme_set(theme_economist(base_size = 16))
# Level of Dengue risk around the world
level_of_risk
# Visualize level_of_risk dataset
vis_dat(level_of_risk)
# Summarize and Visualize level_of_riskdata
tab1 <- level_of_risk %>% group_by(region, level_of_risk) %>%
summarise(count = n(), .groups = 'drop')
knitr::kable(tab1)
ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
p <- ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(maps)
library(magrittr)
library(viridis)
library(denguedatahub)
library(visdat)
# Level of Dengue risk around the world
level_of_risk
# Visualize level_of_risk dataset
vis_dat(level_of_risk)
# Summarize and Visualize level_of_riskdata
tab1 <- level_of_risk %>% group_by(region, level_of_risk) %>%
summarise(count = n(), .groups = 'drop')
knitr::kable(tab1)
p <- ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
p <- ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(maps)
library(magrittr)
library(viridis)
library(denguedatahub)
library(visdat)
# Level of Dengue risk around the world
level_of_risk
# Visualize level_of_risk dataset
vis_dat(level_of_risk)
# Summarize and Visualize level_of_riskdata
tab1 <- level_of_risk %>% group_by(region, level_of_risk) %>%
summarise(count = n(), .groups = 'drop')
knitr::kable(tab1)
p <- ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
# Presence of dengue incidence in 2019
worlddata2019 <- dplyr::filter(world_annual, year == 2019)
ggplot(worlddata2019, aes(x = long,
y = lat,
group=group,
fill = dengue.present)) +
geom_polygon(color = "black") +
labs(title = "Presence of dengue incidence in 2019",
subtitle = "Dengue Incidence in 2019: A Global Health Challenge",
x = "Longitude",
y = "Latitude",
caption = "by Jubayer Hossain, Data Source: denguedatahub") +
guides(fill = guide_legend(title = "Dengue Present?"))+
theme(legend.position = "top") +
scale_fill_brewer(palette = "Dark2")
library(tidyverse)
library(ggthemes)
library(hrbrthemes)
library(maps)
library(magrittr)
library(viridis)
library(denguedatahub)
library(visdat)
# Level of Dengue risk around the world
level_of_risk
# Visualize level_of_risk dataset
vis_dat(level_of_risk)
# Summarize and Visualize level_of_riskdata
tab1 <- level_of_risk %>% group_by(region, level_of_risk) %>%
summarise(count = n(), .groups = 'drop')
knitr::kable(tab1)
p <- ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
ggplotly(p)
ggplot(tab1, aes(region, count)) +
geom_bar(aes(fill = level_of_risk), stat = "identity", position = "dodge")+
labs(title = "Level of Dengue risk around the world",
subtitle = "The level of risk in the context of dengue refers to the likelihood of dengue outbreaks happening in various regions worldwide.",
x = "Region",
y = "Number of countries",
caption = "by Jubayer Hossain, Data Source: denguedatahub")+
guides(fill = guide_legend(title = "Level of Risk"))+
scale_fill_brewer(palette = "Dark2")+
theme(legend.position = "top")
?denguedatahub
# Viz 1: Daily Confirmed, Death, and Recovered Cases Over Time in 2023
plot_ly(data = daily_data_23, x = ~Date, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~Cases)
# Packages
library(tidyverse)
library(plotly)
library(readxl)
library(rio)
# cases data
dengue_cases <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 1)
dengue_cases <- dengue_cases |> mutate(Months = factor(Months, levels = month.name))
# deaths data
dengue_deaths <- read_excel(here::here("data/DengueCaseReporting[2012-23].xlsx"),sheet = 2)
dengue_deaths <- dengue_deaths |> mutate(Months = factor(Months, levels = month.name))
# daily data for 2023
daily_data_23 <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
# convert into date format
daily_data_23$Date <- as.Date(daily_data_23$Date)
# impute missing values with zero
daily_data_23[is.na(daily_data_23)] <- 0
# transform data into long format for visualizations
# cases
long_cases_data <- dengue_cases |>
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") |>
mutate(Months = factor(Months, levels = month.name))
# deaths
long_deaths_data <- dengue_deaths |>
pivot_longer(cols = 2:10, names_to = "Year", values_to = "Deaths") |>
mutate(Months = factor(Months, levels = month.name))
# join data
all_years <- left_join(long_cases_data, long_deaths_data,
by = c("Months", "Year"))
all_years$Year <- as.factor(all_years$Year)
# Monthly dengue cases for 2023
long_cases_data_23 <- long_cases_data|>
filter(Year == 2023)
long_deaths_data_23 <- long_deaths_data|>
filter(Year == 2023)
# join data for monthly cases
data23 <- left_join(long_cases_data_23, long_deaths_data_23,
by = c("Months", "Year"))
data23$Year <- as.factor(data23$Year)
# Viz 1: Daily Confirmed, Death, and Recovered Cases Over Time in 2023
plot_ly(data = daily_data_23, x = ~Date, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~Cases)
View(daily_data_23)
daily_data_23 |>
mutate(Month = lubridate::month(date),
Day = lubridate::day(date))
daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date))
View(daily_data_23)
daily_data_23 <- daily_data_23 |>
mutate(Month = factor(lubridate::month(Date), levels = month.name),
Day = lubridate::day(Date))
View(daily_data_23)
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date))
View(all_years)
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date),
Day = lubridate::day(Date)) |>
mutate(Month = factor(Month, levels = month.name))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date))
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date)) |>
mutate(Month = factor(Month, levels = month.name))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
# daily_data_23
daily_data_23 <- daily_data_23 |>
mutate(Month = lubridate::month(Date, label = TRUE),
Day = lubridate::day(Date))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
# Viz 1: Daily Confirmed, Death, and Recovered Cases Over Time in 2023
monthly_data_23 <- daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases))
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase)
monthly_data_23 <- daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalCase = sum(Deaths),
TotalCase = sum(Recovered))
View(monthly_data_23)
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalCase = sum(Deaths),
TotalCase = sum(Recovered))
daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalDeaths = sum(Deaths),
TotalRecovered = sum(Recovered))
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers')
monthly_data_23 <- daily_data_23 |>
group_by(Month) |>
summarise(TotalCase = sum(Cases),
TotalDeaths = sum(Deaths),
TotalRecovered = sum(Recovered))
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers')
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TotalRecovered, name = "Recovered", type = 'scatter', mode = 'lines+markers')
plot_ly(data = monthly_data_23, x = ~Month, type = 'scatter', mode = 'lines+markers',
name = 'Cases', y = ~TotalCase) |>
add_trace(y = ~TotalDeaths, name = "Deaths", type = 'scatter', mode = 'lines+markers') |>
add_trace(y = ~TotalRecovered, name = "Recovered", type = 'scatter', mode = 'lines+markers') |>
layout(title = "Monthly Dengue Reporting Cases, Deaths, and Recovered in 2023",
xaxis = list(title = 'Date'),
yaxis = list(title = 'Cases'),
legend = list(orientation = "h",
xanchor = "center",
x = 0.5,
y= 1))
world_annual
world <- world_annual
View(world)
plot_ly(data = world_annual, x = ~year)  |>
add_bars(y = ~incidence, name = 'Dengue Incidence', marker = list(color = "#ff7c43")) |>
layout(title = 'Global Dengue Incidence from ',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Incidence'))
plot_ly(data = world_annual, x = ~year)  |>
add_bars(y = ~incidence, name = 'Dengue Incidence', marker = list(color = "#ff7c43")) |>
layout(title = 'Global Dengue Incidence from ',
xaxis = list(title = 'Year'),
yaxis = list(title = 'Incidence'))
