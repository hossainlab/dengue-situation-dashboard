y = "Count")+
scale_color_manual("Dengue Cases",
values = c("Confirmed Cases" = "red",
"Confirmed Deaths" = "black",
"Recovered Cases" = "green"))
# check data structure
glimpse(data23)
clas(data23$Cases)
class(data23$Cases)
# dashboard
library(flexdashboard)
library(tidyverse)
library(sjPlot)
library(viridis)
# Maps and Plots
library(plotly)
library(leaflet)
library(leafpop)
library(RColorBrewer)
# Dates
library(lubridate)
## For displaying tables
library(DT)
library(readxl)
theme_set(theme_classic())
# read dengue cases data from 2012 to 2023
all_cases_data <- read_excel("data/DengueCaseReporting[2012-23].xlsx", sheet = 1)
# transform data
long_cases_data <- all_cases_data %>%
pivot_longer(cols = 2:13, names_to = "Year", values_to = "Cases") %>%
mutate(Months = factor(Months, levels = month.name))
long_cases_data$Year <- as.factor(long_cases_data$Year )
# read dengue deaths cases data from 2015 to 2023
all_deaths_data <- read_excel("data/DengueCaseReporting[2012-23].xlsx", sheet = 2)
# transform data
long_deaths_data <- all_deaths_data %>%
pivot_longer(cols = 2:10, names_to = "Year", values_to = "Death Cases") %>%
mutate(Months = factor(Months, levels = month.name))
long_deaths_data$Year <- as.factor(long_deaths_data$Year)
# read multiple sheets
data23 <- import_list(here::here("data/DengueCases2023.xlsx"),
setclass = "data.table",
rbind_label = "file",
rbind = TRUE)
data23$Date <- as.Date(data23$Date)
confirmed <- format(sum(data23$Cases, na.rm = T), big.mark = ",")
valueBox(value = confirmed,
caption = "Total Confirmed Cases in 2023",
color = confirmed_color)
confirmed_color <- "lightsteelblue"
active_color <- "orange"
new_deaths_color <- "limegreen"
death_color <- "red"
confirmed <- format(sum(data23$Cases, na.rm = T), big.mark = ",")
valueBox(value = confirmed,
caption = "Total Confirmed Cases in 2023",
color = confirmed_color)
deaths <- format(sum(data23$Deaths, na.rm = T), big.mark = ",")
valueBox(value = deaths,
caption = "Total Death Cases in 2023",
color = death_color)
confirmed_color <- "lightsteelblue"
active_color <- "orange"
recovered_color <- "limegreen"
death_color <- "red"
confirmed_color <- "lightsteelblue"
active_color <- "orange"
recovered_color <- "limegreen"
death_color <- "red"
recovered <- format(sum(data23$Recovered, na.rm = T), big.mark = ",")
valueBox(value = recovered,
caption = "Total Recovered Cases in 2023",
color = recovered_color)
fig23 <- plot_ly(data23, x = ~Date, y = ~Cases, name = 'Confirmed Cases', type = 'scatter', mode = 'lines')
fig23 <- fig23 %>%
add_trace(y = ~Deaths, name = 'Confirmed Deaths',type = 'scatter', mode = 'lines')
fig23 <- fig23 %>%
add_trace(y = ~Recovered, name = 'Recovered',type = 'scatter', mode = 'lines')
fig23
fig23 <- plot_ly(data23, x = ~Date, y = ~Cases, name = 'Cases', type = 'scatter', mode = 'lines')
fig23 <- fig23 %>%
add_trace(y = ~Deaths, name = 'Deaths',type = 'scatter', mode = 'lines')
fig23 <- fig23 %>%
add_trace(y = ~Recovered, name = 'Recovered',type = 'scatter', mode = 'lines')
fig23
case_sum_df <- long_cases_data %>%
group_by(Year) %>%
summarise(TotalCases = sum(Cases))
fig_cases <- ggplot(data = case_sum_df, aes(x = Year, y = TotalCases))+
geom_bar(stat="identity", fill="#003f5c")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_cases)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, group=Year, color=Year))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(`Death Cases`))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
last3<- long_cases_data %>%
filter(Year == c(2021, 2022, 2023))
fig_cases_month <- ggplot(data = last3,
aes(x = Months, y = Cases, group=Year, color=Year))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_cases_month)
last3_sum_df <- long_cases_data %>%
filter(Year == c(2021, 2022, 2023)) %>%
group_by(Year) %>%
summarise(TotalCases = sum(Cases))
fig_cases_year <- ggplot(data = last3_sum_df, aes(x = Year, y=TotalCases))+
geom_bar(stat="identity", fill="#d45087")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_cases_year)
last3<- long_deaths_data %>%
filter(Year == c(2021, 2022, 2023))
fig_deaths_month <- ggplot(data = last3,
aes(x = Months, y = `Death Cases`, group=Year, color=Year))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths_month)
last3_sum_df <- long_deaths_data %>%
filter(Year == c(2021, 2022, 2023)) %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(`Death Cases`))
fig_last3_deaths <- ggplot(data = last3_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#a05195")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_last3_deaths)
# dashboard
library(flexdashboard)
library(tidyverse)
library(sjPlot)
library(viridis)
library(rio)
# Maps and Plots
library(plotly)
library(leaflet)
library(leafpop)
library(RColorBrewer)
# Dates
library(lubridate)
## For displaying tables
library(DT)
library(readxl)
theme_set(theme_classic())
data23$Active <- data23$Cases - data23$Deaths - data23$Recovered
active <- format(sum(data23$Active, na.rm = T), big.mark = ",")
valueBox(value = active,
caption = "Total Active Cases in 2023",
color = active_color)
webshot::webshot("index.html", "dengue_report.png")
case_sum_df <- long_cases_data %>%
group_by(Year) %>%
summarise(TotalCases = sum(Cases))
fig_cases <- ggplot(data = case_sum_df, aes(x = Year, y = TotalCases))+
geom_bar(stat="identity", fill="#003f5c")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_cases)
# dashboard
library(flexdashboard)
library(tidyverse)
library(sjPlot)
library(viridis)
library(rio)
# Maps and Plots
library(plotly)
library(leaflet)
library(leafpop)
library(RColorBrewer)
# Dates
library(lubridate)
## For displaying tables
library(DT)
library(readxl)
theme_set(theme_classic())
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(`Death Cases`))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
View(long_cases_data)
View(long_deaths_data)
# read dengue deaths cases data from 2015 to 2023
all_deaths_data <- read_excel("data/DengueCaseReporting[2012-23].xlsx", sheet = 2)
# transform data
long_deaths_data <- all_deaths_data %>%
pivot_longer(cols = 2:10, names_to = "Year", values_to = "Deaths") %>%
mutate(Months = factor(Months, levels = month.name))
long_deaths_data$Year <- as.factor(long_deaths_data$Year)
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
acet_grid(.~Year,scales="free")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
facet_grid(.~Year,scales="free")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
select(where(~!any(is.na(.)))) %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
select(where(~!any(is.na(.)))) %>%
select(where(~!any(.== 0))) %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
select(where(~!any(is.na(.)))) %>%
select(where(~!any(.== 0))) %>%
summarise(TotalDeaths = sum(Deaths))
death_sum_df <- long_deaths_data %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
filter(Year %in% c(2019, 2022, 2023)) %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
filter(Year != is.na(Year)) %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
death_sum_df <- long_deaths_data %>%
filter(Year %in% c(2019, 2022, 2023)) %>%
group_by(Year) %>%
summarise(TotalDeaths = sum(Deaths))
fig_deaths <- ggplot(data = death_sum_df, aes(x = Year, y=TotalDeaths))+
geom_bar(stat="identity", fill="#ff7c43")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_deaths)
case_sum_df <- long_cases_data %>%
group_by(Year) %>%
summarise(TotalCases = sum(Cases))
fig_cases <- ggplot(data = case_sum_df, aes(x = Year, y = TotalCases))+
geom_bar(stat="identity", fill="#003f5c")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig_cases)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, group=Year, color=Year))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, group=Year, color=Year))+
geom_bar()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, group=Year, color=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, color=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
scale_fill_viridis()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
scale_fill_discrete()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
scale_fill_discrete()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
geom_line(aes(y = Cases, group=Year, color=Year))+
theme_minimal()+
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
geom_line(aes(y = Cases, group=Year, color=Year))+
theme_minimal()
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
geom_line(aes(y = Cases,color=Year))+
theme_minimal()
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
geom_line(aes(y = Cases, group=Year))+
theme_minimal()
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
geom_line(aes(y = Cases))+
theme_minimal()
ggplotly(fig3)
webshot::webshot("index.html", "updated_dashboard.png")
webshot::webshot("index.html", "updated_dashboard.png")
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, fill=Year))+
geom_bar(stat="identity")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = format(Cases, scientific=FALSE)), fill=Year))+
webshot::webshot("index.html", "updated_dashboard.png")
fig3 <- ggplot(data = long_cases_data,
aes(x = Months, y = Cases, group=Year, color=Year))+
geom_line()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 60, vjust = 0.5, hjust=1))
ggplotly(fig3)
webshot::webshot("index.html", "updated_dashboard.png")
webshot::webshot("index.html", "updated_dashboard.png")
webshot::webshot("https://hossainlab.github.io/", "hossainlab.png")
webshot::webshot("https://hossainlab.github.io/", "hossainlab.png") %>% resize(500px)
webshot::webshot("https://hossainlab.github.io/", "hossainlab.png", vwidth = 992, vheight = 744)
webshot::webshot("index.html", "hossainlab.png", vwidth = 992, vheight = 744)
webshot::webshot("index.html", "updated_dashboard.png")
# trends
ggplot(data_new, aes(x = Date)) +
geom_line(aes(y = ConfirmedCases, color = "Confirmed Cases")) +
geom_line(aes(y = ConfirmedDeaths, color = "Confirmed Deaths")) +
geom_line(aes(y = Precipitation, color = "Precipitation")) +
geom_line(aes(y = `Temperature(C)`, color = "Temperature(C)")) +
labs(title = "Dengue cases and environmental parameters trend over time",
x = "Date",
y = "Count") +
scale_color_manual(values = c("Confirmed Cases" = "blue",
"Confirmed Deaths" = "red",
"Precipitation" = "purple",
"Temperature(C)" = "aquamarine")) +
theme_minimal()
# trends
ggplot(data, aes(x = Date))+
geom_line(aes(y = Cases, color = "Confirmed Cases"))+
geom_line(aes(y = Deaths, color = "Confirmed Deaths"))+
geom_line(aes(y = Recovered, color = "Recovered Cases"))+
labs(title = "Dengue cases trend over time",
x = "Date",
y = "Count")+
scale_color_manual("Dengue Cases",
values = c("Confirmed Cases" = "red",
"Confirmed Deaths" = "black",
"Recovered Cases" = "green"))
names(data23)
ggplot(data23, aes(x = Date))+
geom_line(aes(y = Cases, color = "Confirmed Cases"))+
geom_line(aes(y = Precipitation, color = "Precipitation"))+
geom_line(aes(y = Temperature_C, color = "Temperature (C)"))+
labs(title = "Dengue cases and environmental parameters trend over time",
x = "Date",
y = "Count")+
scale_color_manual("Dengue Cases",
values = c("Confirmed Cases" = "red",
"Precipitation" = "black",
"Temperature (C)" = "green"))
# environment trends
p <- ggplot(data23, aes(x = Date))+
geom_line(aes(y = Cases, color = "Confirmed Cases"))+
geom_line(aes(y = Precipitation, color = "Precipitation"))+
geom_line(aes(y = Temperature_C, color = "Temperature (C)"))+
labs(title = "Dengue cases and environmental parameters trend over time",
x = "Date",
y = "Count")+
scale_color_manual("Dengue Cases",
values = c("Confirmed Cases" = "red",
"Precipitation" = "black",
"Temperature (C)" = "green"))
ggplotly(p)
data23 %>%
arrange(Date) %>%
head()
data23 %>%
arrange(Cases) %>%
head()
data23 %>%
arrange(Cases) %>%
ggplot(data23, aes(x = Date))+
geom_line(aes(y = Cases, color = "Confirmed Cases"))+
geom_line(aes(y = Precipitation, color = "Precipitation"))+
geom_line(aes(y = Temperature_C, color = "Temperature (C)"))+
labs(title = "Dengue cases and environmental parameters trend over time",
x = "Date",
y = "Count")+
scale_color_manual("Dengue Cases",
values = c("Confirmed Cases" = "red",
"Precipitation" = "black",
"Temperature (C)" = "green"))
data23 %>%
arrange(Cases) %>%
ggplot(aes(x = Date))+
geom_line(aes(y = Cases, color = "Confirmed Cases"))+
geom_line(aes(y = Precipitation, color = "Precipitation"))+
geom_line(aes(y = Temperature_C, color = "Temperature (C)"))+
labs(title = "Dengue cases and environmental parameters trend over time",
x = "Date",
y = "Count")+
scale_color_manual("Dengue Cases",
values = c("Confirmed Cases" = "red",
"Precipitation" = "black",
"Temperature (C)" = "green"))
